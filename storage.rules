rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isValidImage() {
      return request.resource.size < 5 * 1024 * 1024 // 5MB
        && request.resource.contentType.matches('image/.*');
    }
    
    // Listing images
    match /listings/{listingId}/{imageId} {
      allow read: if true; // Public read for browsing
      allow write: if isSignedIn() && isValidImage();
      allow delete: if isSignedIn();
    }
    
    // User avatars
    match /avatars/{userId}/{imageId} {
      allow read: if true; // Public read
      allow write: if isSignedIn() && request.auth.uid == userId && isValidImage();
      allow delete: if isSignedIn() && request.auth.uid == userId;
    }
  }
}
